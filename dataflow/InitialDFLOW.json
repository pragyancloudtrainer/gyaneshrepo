{
	"name": "InitialDFLOW",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "srcEmp",
						"type": "DatasetReference"
					},
					"name": "srcEmp"
				},
				{
					"dataset": {
						"referenceName": "srcDepartment",
						"type": "DatasetReference"
					},
					"name": "srcDept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "salgt55k",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "salarylt55k",
						"type": "DatasetReference"
					},
					"name": "salarylt55ksink"
				}
			],
			"transformations": [
				{
					"name": "innerjoin"
				},
				{
					"name": "selectValue"
				},
				{
					"name": "sortBySal"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "salarysplit"
				}
			],
			"scriptLines": [
				"source(output(",
				"          eid as integer,",
				"          deptid as integer,",
				"          ename as string,",
				"          eage as integer,",
				"          esalary as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcEmp",
				"source(output(",
				"          deptid as integer,",
				"          deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcDept",
				"srcEmp, srcDept join(srcEmp@deptid == srcDept@deptid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> innerjoin",
				"derivedColumn1 select(mapColumn(",
				"          eid,",
				"          ename,",
				"          deptid = srcDept@deptid,",
				"          deptname,",
				"          esalary,",
				"          incremented_salary",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> selectValue",
				"selectValue sort(desc(esalary, true)) ~> sortBySal",
				"innerjoin derive(incremented_salary = esalary + 15000) ~> derivedColumn1",
				"sortBySal split(esalary > 55000,",
				"     esalary <= 55000,",
				"     disjoint: true) ~> salarysplit@(salarygt55k, salarylt55k)",
				"salarysplit@salarygt55k sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"salarysplit@salarylt55k sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> salarylt55ksink"
			]
		}
	}
}