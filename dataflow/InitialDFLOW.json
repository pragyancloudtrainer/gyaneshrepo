{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "srcEmp",
						"type": "DatasetReference"
					},
					"name": "srcEmp"
				},
				{
					"dataset": {
						"referenceName": "srcDepartment",
						"type": "DatasetReference"
					},
					"name": "srcDept"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "innerjoin"
				},
				{
					"name": "selectValue"
				},
				{
					"name": "sortInfo"
				}
			],
			"scriptLines": [
				"source(output(",
				"          eid as integer,",
				"          deptid as integer,",
				"          ename as string,",
				"          eage as integer,",
				"          esalary as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcEmp",
				"source(output(",
				"          deptid as integer,",
				"          deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcDept",
				"srcEmp, srcDept join(srcEmp@deptid == srcDept@deptid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> innerjoin",
				"innerjoin select(mapColumn(",
				"          eid,",
				"          ename,",
				"          deptid = srcDept@deptid,",
				"          deptname,",
				"          esalary",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectValue",
				"selectValue sort(desc(esalary, true),",
				"     caseInsensitive: true) ~> sortInfo"
			]
		}
	}
}